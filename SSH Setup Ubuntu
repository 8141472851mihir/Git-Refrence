WHY : Allows you to securely connect to GitHub without needing to enter your username and password each time

Ubantu: (bash)
Step 1: Check for Existing SSH Keys
	ls ~/.ssh/id_rsa*  (bash)
	(If the files id_rsa and id_rsa.pub exist, you already have an SSH key pair.)

Step 2: Generate a New SSH Key
	ssh-keygen -t ed25519 -C "your.email@example.com" 	(bash)

	- If you see an error about ed25519 not being supported, use:
		ssh-keygen -t rsa -b 4096 -C "your.email@example.com"	(bash)
	- When prompted for a file to save the key, press Enter to use the default location 
		(~/.ssh/id_ed25519 or ~/.ssh/id_rsa).
	- Enter a passphrase (optional)

Step 3: Start the SSH Agent
	eval "$(ssh-agent -s)" 	(bash)

Step 4: Add the SSH Key to the Agent
	ssh-add ~/.ssh/id_rsa	(bash)
		- replace id_rsa with yours [ex: ssh-add ~/.ssh/id_ed25519]

Step 5: Add the SSH Key to GitHub
	cat ~/.ssh/id_ed25519.pub 	(bash)
		-(Use id_rsa.pub if you generated an RSA key.)

		-Go to GitHub:
			- Navigate to GitHub SSH Settings.
			- Click "New SSH key".
			- Paste the key into the box and name it something like "Ubuntu PC".
			- Click "Add SSH key".

Step 6: Test the SSH Connection
	ssh -T git@github.com	(bash)
		If successful, you’ll see:  You've successfully authenticated...

Step 7: Configure Git to Use SSH (Optional)
	- If you previously used HTTPS, change Git to use SSH:
		git remote set-url origin git@github.com:YourUsername/YourRepo.git 	(bash)

Other Steps(Optional Codes):

1)Check SSH connection logs:
	ssh -vT git@github.com	(bash)

2)Ensure ssh-agent is running:
	eval "$(ssh-agent -s)"	(bash)
	ssh-add -l				(bash)

3)If the key isn’t working, remove and re-add it:
	ssh-add -D  				(bash)
	ssh-add ~/.ssh/id_ed25519	(bash)

